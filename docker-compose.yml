version: '3.4'

services:
  index.source:
    image: ${DOCKER_REGISTRY-}indexsource
    build:
      context: .
      dockerfile: Index.Source/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "5000:8080"
      - "5001:8081"
  index.search:
    image: ${DOCKER_REGISTRY-}indexsource
    build:
      context: .
      dockerfile: Index.Search/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "6000:8080"
      - "6001:8081"
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootPassword1!
  mongo-express:
    image: mongo-express
    ports:
      - "8000:8081" 
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootPassword1!
      - ME_CONFIG_MONGODB_URL=mongodb://root:rootPassword1!@mongo:27017/
      - ME_CONFIG_BASICAUTH=false
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 8082:15672
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
    environment:
      - node.name=es
      - cluster.name=es-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports: 
      - "9200:9200"
      - "9300:9300"
  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.1
    environment:
      - node.name=kib
      - cluster.name=es-cluster
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  